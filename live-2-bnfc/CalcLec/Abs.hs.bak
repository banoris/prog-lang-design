-- Haskell data types for the abstract syntax.
-- Generated by the BNF converter.

module CalcLec.Abs where

import Prelude (Char, Double, Integer, String)
import qualified Prelude as C (Eq, Ord, Show, Read)

data Exp = EAdd Exp Product | ESub Exp Product | EProd Product
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Product
    = EMul Product Integer | EDiv Product Integer | EInt Integer
  deriving (C.Eq, C.Ord, C.Show, C.Read)

